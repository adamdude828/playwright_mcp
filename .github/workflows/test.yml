name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        
      - name: Install dependencies
        run: |
          poetry install
          poetry run pip install -e .
          
      - name: Install MCP CLI
        run: |
          # Install mcp-cli in editable mode
          poetry run pip install -e git+https://github.com/adamdude828/mcp-cli.git#egg=mcp-cli
          # Verify installation
          poetry run which mcp-cli || true
          poetry run mcp-cli --help || true
          
      - name: Install Playwright browsers
        run: |
          poetry run playwright install chromium
          poetry run playwright install-deps
        
      - name: Setup MCP CLI config
        run: |
          cat > server_config.json << 'EOF'
          {
            "mcpServers": {
              "playwright": {
                "command": "python",
                "args": [
                  "-m",
                  "playwright_mcp",
                  "--mode",
                  "server"
                ],
                "logging": {
                  "level": "DEBUG"
                }
              }
            }
          }
          EOF
        
      - name: Run unit tests
        run: |
          poetry run pytest tests/unit/ -v
          
      - name: Run integration tests
        run: |
          poetry run pytest tests/integration/ -v
        
      - name: Cleanup Services
        if: always()
        run: |
          pkill -f "python -m playwright_mcp" || true
          pkill -f "playwright_mcp.browser_manager" || true 